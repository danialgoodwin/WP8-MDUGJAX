// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   ViewModel.tt
using System;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Windows.Input;
using WPAppStudio;
using WPAppStudio.Controls;
using WPAppStudio.Entities;
using WPAppStudio.Entities.Base;
using WPAppStudio.Localization;
using WPAppStudio.Repositories;
using WPAppStudio.Services;
using WPAppStudio.Services.Interfaces;
using WPAppStudio.Shared;
using WPAppStudio.ViewModel.Base;
using WPAppStudio.ViewModel.Interfaces;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of info_Info ViewModel.
    /// </summary>
    [System.Runtime.CompilerServices.CompilerGenerated]
    [System.CodeDom.Compiler.GeneratedCode("Radarc", "4.0")]
    public partial class info_InfoViewModel : BindableBase, Iinfo_InfoViewModel
    {       

		private readonly IDialogService _dialogService;
		private readonly INavigationService _navigationService;
		private readonly ILockScreenService _lockScreenService;
		private readonly Iinfo _info;
		private readonly IspecialplacesCollection _specialplacesCollection;
		private readonly IhistoryCollection _historyCollection;
		private readonly Ialbum _album;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="info_InfoViewModel" /> class.
        /// </summary>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="lockScreenService">The Lock Screen Service.</param>
        /// <param name="info">The Info.</param>
        /// <param name="specialplacesCollection">The Specialplaces Collection.</param>
        /// <param name="historyCollection">The History Collection.</param>
        /// <param name="album">The Album.</param>
        public info_InfoViewModel(IDialogService dialogService, INavigationService navigationService, ILockScreenService lockScreenService, Iinfo info, IspecialplacesCollection specialplacesCollection, IhistoryCollection historyCollection, Ialbum album)
        {
			_dialogService = dialogService;
			_navigationService = navigationService;
			_lockScreenService = lockScreenService;
			_info = info;
			_specialplacesCollection = specialplacesCollection;
			_historyCollection = historyCollection;
			_album = album;
        }
		

		private string _currentinfo_InfoHtmlControl;

        /// <summary>
        /// Currentinfo_InfoHtmlControl property.
        /// </summary>		
        public string Currentinfo_InfoHtmlControl
        {
            get
            {
                if(_currentinfo_InfoHtmlControl == null)
					_currentinfo_InfoHtmlControl = _info.Get();
				return _currentinfo_InfoHtmlControl;     
            }
            set
            {
                SetProperty(ref _currentinfo_InfoHtmlControl, value);
            }
        }

		private ObservableCollection<specialplacesCollectionSchema> _links_ListListControlCollection;

        /// <summary>
        /// Links_ListListControlCollection property.
        /// </summary>		
        public ObservableCollection<specialplacesCollectionSchema> Links_ListListControlCollection
        {
            get
            {
                if(_links_ListListControlCollection == null)
					_links_ListListControlCollection = _specialplacesCollection.GetData();
				return _links_ListListControlCollection;     
            }
            set
            {
                SetProperty(ref _links_ListListControlCollection, value);
            }
        }

		private specialplacesCollectionSchema _selectedlinks_ListListControlCollection;

        /// <summary>
        /// Selectedlinks_ListListControlCollection property.
        /// </summary>		
        public specialplacesCollectionSchema Selectedlinks_ListListControlCollection
        {
            get
            {
				return _selectedlinks_ListListControlCollection;
            }
            set
            {
                _selectedlinks_ListListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IlinksAboutThisPlace1ViewModel>(_selectedlinks_ListListControlCollection);
            }
        }

		private ObservableCollection<historyCollectionSchema> _upcoming_ListListControlCollection;

        /// <summary>
        /// Upcoming_ListListControlCollection property.
        /// </summary>		
        public ObservableCollection<historyCollectionSchema> Upcoming_ListListControlCollection
        {
            get
            {
                if(_upcoming_ListListControlCollection == null)
					_upcoming_ListListControlCollection = _historyCollection.GetData();
				return _upcoming_ListListControlCollection;     
            }
            set
            {
                SetProperty(ref _upcoming_ListListControlCollection, value);
            }
        }

		private historyCollectionSchema _selectedupcoming_ListListControlCollection;

        /// <summary>
        /// Selectedupcoming_ListListControlCollection property.
        /// </summary>		
        public historyCollectionSchema Selectedupcoming_ListListControlCollection
        {
            get
            {
				return _selectedupcoming_ListListControlCollection;
            }
            set
            {
                _selectedupcoming_ListListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<Iupcoming_DetailViewModel>(_selectedupcoming_ListListControlCollection);
            }
        }

		private ObservableCollection<RssSearchResult> _photoAlbum_NewsListControlCollection;

        /// <summary>
        /// PhotoAlbum_NewsListControlCollection property.
        /// </summary>		
        public ObservableCollection<RssSearchResult> PhotoAlbum_NewsListControlCollection
        {
            get
            {
                if(_photoAlbum_NewsListControlCollection == null)
					RefreshPhotoAlbum_NewsListControlCollectionDelegate();
				return _photoAlbum_NewsListControlCollection;     
            }
            set
            {
                SetProperty(ref _photoAlbum_NewsListControlCollection, value);
            }
        }

		private RssSearchResult _selectedPhotoAlbum_NewsListControlCollection;

        /// <summary>
        /// SelectedPhotoAlbum_NewsListControlCollection property.
        /// </summary>		
        public RssSearchResult SelectedPhotoAlbum_NewsListControlCollection
        {
            get
            {
				return _selectedPhotoAlbum_NewsListControlCollection;
            }
            set
            {
                _selectedPhotoAlbum_NewsListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IPhotoAlbum_DetailViewModel>(_selectedPhotoAlbum_NewsListControlCollection);
            }
        }

		private MenuItemData _selectedsponsorsMenuControl;

        /// <summary>
        /// SelectedsponsorsMenuControl property.
        /// </summary>		
        public MenuItemData SelectedsponsorsMenuControl
        {
            get
            {
				return _selectedsponsorsMenuControl;
            }
            set
            {
                _selectedsponsorsMenuControl = value;
                if (value != null)
                    _navigationService.NavigateTo(value);
            }
        }

        /// <summary>
        /// Delegate method for the RefreshPhotoAlbum_NewsListControlCollection command.
        /// </summary>
        public async void RefreshPhotoAlbum_NewsListControlCollectionDelegate(int pageNumber= 1) 
        {
			try
			{
				LoadingPhotoAlbum_NewsListControlCollection = true;
				PhotoAlbum_NewsListControlCollection = await _album.GetData();
			}
            catch (Exception ex)
            {
				PhotoAlbum_NewsListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(AppResources.rssError + Environment.NewLine + AppResources.TryAgain);
            }
            finally
            {
				LoadingPhotoAlbum_NewsListControlCollection = false;
			}
        }
		
		
        private bool _loadingPhotoAlbum_NewsListControlCollection;
		
        public bool LoadingPhotoAlbum_NewsListControlCollection
        {
            get { return _loadingPhotoAlbum_NewsListControlCollection; }
            set { SetProperty(ref _loadingPhotoAlbum_NewsListControlCollection, value); }
        }

        private ICommand _refreshPhotoAlbum_NewsListControlCollection;

        /// <summary>
        /// Gets the RefreshPhotoAlbum_NewsListControlCollection command.
        /// </summary>
        public ICommand RefreshPhotoAlbum_NewsListControlCollection
        {
            get { return _refreshPhotoAlbum_NewsListControlCollection = _refreshPhotoAlbum_NewsListControlCollection ?? new DelegateCommand<int>(RefreshPhotoAlbum_NewsListControlCollectionDelegate); }
        }

        /// <summary>
        /// Delegate method for the SetLockScreenCommand command.
        /// </summary>
        public  void SetLockScreenCommandDelegate() 
        {
	
				_lockScreenService.SetLockScreen("LockScreen-a4f8e94c-8c40-4bc4-b381-b41c3e7689f6.jpg");
        }
		

        private ICommand _setLockScreenCommand;

        /// <summary>
        /// Gets the SetLockScreenCommand command.
        /// </summary>
        public ICommand SetLockScreenCommand
        {
            get { return _setLockScreenCommand = _setLockScreenCommand ?? new DelegateCommand(SetLockScreenCommandDelegate); }
        }
    }
}
